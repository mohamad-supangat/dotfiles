hotkey-overlay {
    skip-at-startup
}

animations {
    off
}

input {
    keyboard {
        xkb {

        }
        numlock
    }
    touchpad {
        dwt
        dwtp
        tap
        natural-scroll
        accel-speed 0.3
        accel-profile "flat"
        // scroll-factor 0.5
        // scroll-method "two-finger"
        // scroll-button 273
    }
    // warp-mouse-to-focus
}
gestures {
    hot-corners {
        off
    }
}
overview {
    zoom 0.6
    backdrop-color "#2e3436"
    workspace-shadow {
        off
    }
}

output "eDP-1" {
    scale 1
}
environment {
    DISPLAY ":0"
    ELECTRON_OZONE_PLATFORM_HINT "auto"
}

layout {
    background-color "transparent"
    gaps 8
    // center-focused-column "on-overflow"
    center-focused-column "never"

    preset-column-widths {
        proportion 0.5
        proportion 0.66667
        proportion 1.0
    }
    preset-window-heights {
        proportion 0.5
        proportion 1.0
    }
    default-column-width {

    }
    // You can change how the focus ring looks.
    focus-ring {
        width 4
        active-gradient from="#f6f6f6" to="#f6f6f6" angle=45
        inactive-gradient from="#2e3436" to="#2e3436" angle=45 relative-to="workspace-view"
    }
    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        off
        width 4
        urgent-color "#9b0000"
        active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
    shadow {
        on
        draw-behind-window true
        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
    }
}

workspace "browser"
workspace "terminal"
workspace "filemanager"

//spawn-at-startup "xwayland-satellite"
spawn-at-startup "~/.config/sway/bin/random-wallpaper.sh"
spawn-at-startup "waybar"
spawn-at-startup "wl-paste" "--watch" "cliphist" "-max-items" "10000" "store"


window-rule {
    match app-id=r#"^(floorp|firefox|chrome|zen)$"#
    open-on-workspace "browser"
}

window-rule {
    match app-id=r#"^(foot|footclient|alacritty|ghostty)$"#
    open-on-workspace "terminal"
}
window-rule {
    match app-id=r#"^org\.gnome\.Nautilus$"#
    open-on-workspace "filemanager"
}

prefer-no-csd
window-rule {
    match app-id="^org\\.wezfurlong\\.wezterm$"
    default-column-width {

    }
}
window-rule {
    match title="^Picture-in-Picture$"
    open-floating true
    default-floating-position x=32 y=32 relative-to="top-right"
}

window-rule {
    match app-id="^org\\.keepassxc\\.KeePassXC$"
    match app-id="^org\\.gnome\\.World\\.Secrets$"
    block-out-from "screen-capture"
 // block-out-from "screencast"
}


window-rule {
    match app-id="^evince$"
    default-column-display "tabbed"
}

layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}

layer-rule {
    match namespace="^notifications$"
    block-out-from "screencast"
}

window-rule {
    match app-id="^swaync$"
    block-out-from "screencast"
}

window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
}

window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }

    border {
        inactive-color "#7d0d2d"
    }

    shadow {
        color "#7d0d2d70"
    }

    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}

binds {
    Mod+Shift+Slash {
        show-hotkey-overlay
    }
    Ctrl+Alt+T hotkey-overlay-title="Open a Terminal: foot" {
        spawn "footclient"
    }
    Mod+Return hotkey-overlay-title="Open a tmux session" {
        spawn "~/.scripts/tmux_session.sh" "footclient"
    }
    Mod+Shift+Return hotkey-overlay-title="Open a tmux project" {
        spawn "~/.scripts/rofi-tmuxp.sh" "footclient"
    }
    Mod+D hotkey-overlay-title="Run Command: rofi" {
        spawn "rofi" "-modi" "run" "-show" "run"
    }
    Mod+Space hotkey-overlay-title="Run Applications: rofi" {
        spawn "rofi" "-modi" "drun" "-show" "drun"
    }
    Mod+Shift+g hotkey-overlay-title="Run Geary" {
        spawn "geary"
    }
    Mod+Shift+c hotkey-overlay-title="Run Calendar" {
        spawn "gnome-calendar"
    }
    Mod+Shift+n hotkey-overlay-title="Show Notification Control Panel" {
        spawn "swaync-client" "-t" "-sw"
    }
    Mod+n hotkey-overlay-title="Run File Manager" {
        spawn "nautilus"
    }
    Ctrl+Alt+h hotkey-overlay-title="Show Clipboard Manager: rofi" {
        //spawn "sh" "-c" "cliphist list | rofi -dmenu | cliphist decode | wl-copy"
        //spawn "sh" "-c" "rofi -modi clipboard:~/.config/rofi/module/cliphist-img -show clipboard -show-icons"
        spawn "sh" "-c" "rofi -modi clipboard:~/.config/rofi/module/cliphist -show clipboard"

    }
    // Super+Alt+L hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }
    XF86AudioRaiseVolume allow-when-locked=true {
        spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.01+"
    }
    XF86AudioLowerVolume allow-when-locked=true {
        spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.01-"
    }
    XF86AudioMute allow-when-locked=true {
        spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"
    }
    XF86AudioMicMute allow-when-locked=true {
        spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"
    }
    XF86MonBrightnessUp allow-when-locked=true {
        spawn "brightnessctl" "set" "+500"
    }
    XF86MonBrightnessDown allow-when-locked=true {
        spawn "brightnessctl" "set" "500-"
    }
    Mod+O repeat=false {
        toggle-overview
    }
    Mod+Shift+Space repeat=false {
        toggle-window-floating
    }
    Mod+Shift+Q {
        close-window
    }
    Mod+Left {
        focus-column-left
    }
    Mod+Down {
        focus-window-down
    }
    Mod+Up {
        focus-window-up
    }
    Mod+Right {
        focus-column-right
    }
    Mod+H {
        focus-column-left
    }
    // Mod+J     { focus-window-down; }
    // Mod+K     { focus-window-up; }
    Mod+L {
        focus-column-right
    }
    Mod+Shift+Left {
        move-column-left
    }
    Mod+Shift+Down {
        move-window-down
    }
    Mod+Shift+Up {
        move-window-up
    }
    Mod+Shift+Right {
        move-column-right
    }
    Mod+Shift+H {
        move-column-left
    }
    // Mod+Shift+J     { move-window-down; }
    // Mod+Shift+K     { move-window-up; }
    Mod+Shift+L {
        move-column-right
    }
    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    Mod+J {
        focus-window-or-workspace-down
    }
    Mod+K {
        focus-window-or-workspace-up
    }
    Mod+Shift+J {
        move-window-down-or-to-workspace-down
    }
    Mod+Shift+K {
        move-window-up-or-to-workspace-up
    }
    Mod+Home {
        focus-column-first
    }
    Mod+End {
        focus-column-last
    }
    Mod+Ctrl+Home {
        move-column-to-first
    }
    Mod+Ctrl+End {
        move-column-to-last
    }
    Mod+Ctrl+Left {
        focus-monitor-left
    }
    Mod+Ctrl+Down {
        focus-monitor-down
    }
    Mod+Ctrl+Up {
        focus-monitor-up
    }
    Mod+Ctrl+Right {
        focus-monitor-right
    }
    Mod+Ctrl+H {
        focus-monitor-left
    }
    Mod+Ctrl+J {
        focus-monitor-down
    }
    Mod+Ctrl+K {
        focus-monitor-up
    }
    Mod+Ctrl+L {
        focus-monitor-right
    }
    Mod+Shift+Ctrl+Left {
        move-column-to-monitor-left
    }
    Mod+Shift+Ctrl+Down {
        move-column-to-monitor-down
    }
    Mod+Shift+Ctrl+Up {
        move-column-to-monitor-up
    }
    Mod+Shift+Ctrl+Right {
        move-column-to-monitor-right
    }
    Mod+Shift+Ctrl+H {
        move-column-to-monitor-left
    }
    Mod+Shift+Ctrl+J {
        move-column-to-monitor-down
    }
    Mod+Shift+Ctrl+K {
        move-column-to-monitor-up
    }
    Mod+Shift+Ctrl+L {
        move-column-to-monitor-right
    }
    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...
    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...
    Mod+Page_Down {
        focus-workspace-down
    }
    Mod+Page_Up {
        focus-workspace-up
    }
    Mod+U {
        focus-workspace-down
    }
    Mod+I {
        focus-workspace-up
    }
    Mod+Ctrl+Page_Down {
        move-column-to-workspace-down
    }
    Mod+Ctrl+Page_Up {
        move-column-to-workspace-up
    }
    Mod+Ctrl+U {
        move-column-to-workspace-down
    }
    Mod+Ctrl+I {
        move-column-to-workspace-up
    }
    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...
    Mod+Shift+Page_Down {
        move-workspace-down
    }
    Mod+Shift+Page_Up {
        move-workspace-up
    }
    Mod+Shift+U {
        move-workspace-down
    }
    Mod+Shift+I {
        move-workspace-up
    }
    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown cooldown-ms=150 {
        focus-workspace-down
    }
    Mod+WheelScrollUp cooldown-ms=150 {
        focus-workspace-up
    }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 {
        move-column-to-workspace-down
    }
    Mod+Ctrl+WheelScrollUp cooldown-ms=150 {
        move-column-to-workspace-up
    }
    Mod+WheelScrollRight {
        focus-column-right
    }
    Mod+WheelScrollLeft {
        focus-column-left
    }
    Mod+Ctrl+WheelScrollRight {
        move-column-right
    }
    Mod+Ctrl+WheelScrollLeft {
        move-column-left
    }
    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown {
        focus-column-right
    }
    Mod+Shift+WheelScrollUp {
        focus-column-left
    }
    Mod+Ctrl+Shift+WheelScrollDown {
        move-column-right
    }
    Mod+Ctrl+Shift+WheelScrollUp {
        move-column-left
    }
    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }
    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 {
        focus-workspace 1
    }
    Mod+2 {
        focus-workspace 2
    }
    Mod+3 {
        focus-workspace 3
    }
    Mod+4 {
        focus-workspace 4
    }
    Mod+5 {
        focus-workspace 5
    }
    Mod+6 {
        focus-workspace 6
    }
    Mod+7 {
        focus-workspace 7
    }
    Mod+8 {
        focus-workspace 8
    }
    Mod+9 {
        focus-workspace 9
    }
    Mod+Shift+1 {
        move-column-to-workspace 1
    }
    Mod+Shift+2 {
        move-column-to-workspace 2
    }
    Mod+Shift+3 {
        move-column-to-workspace 3
    }
    Mod+Shift+4 {
        move-column-to-workspace 4
    }
    Mod+Shift+5 {
        move-column-to-workspace 5
    }
    Mod+Shift+6 {
        move-column-to-workspace 6
    }
    Mod+Shift+7 {
        move-column-to-workspace 7
    }
    Mod+Shift+8 {
        move-column-to-workspace 8
    }
    Mod+Shift+9 {
        move-column-to-workspace 9
    }
    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }
    // Switches focus between the current and the previous workspace.
    Mod+Tab {
        focus-workspace-previous
    }
    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft {
        consume-or-expel-window-left
    }
    Mod+BracketRight {
        consume-or-expel-window-right
    }
    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma {
        consume-window-into-column
    }
    // Expel the bottom window from the focused column to the right.
    Mod+Period {
        expel-window-from-column
    }
    Mod+R {
        switch-preset-column-width
    }
    Mod+Shift+R {
        switch-preset-window-height
    }
    Mod+Ctrl+R {
        reset-window-height
    }
    Mod+F {
        maximize-column
    }
    Mod+Shift+F {
        fullscreen-window
    }
    Mod+Ctrl+Shift+F { toggle-windowed-fullscreen; }
    Ctrl+Alt+F { set-dynamic-cast-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F {
        expand-column-to-available-width
    }
    Mod+C {
        center-column
    }
    // Center all fully visible columns on screen.
    Mod+Ctrl+C {
        center-visible-columns
    }
    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus {
        set-column-width "-10%"
    }
    Mod+Equal {
        set-column-width "+10%"
    }
    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus {
        set-window-height "-10%"
    }
    Mod+Shift+Equal {
        set-window-height "+10%"
    }
    // Move the focused window between the floating and the tiling layout.
    Mod+V {
        toggle-window-floating
    }
    Mod+Shift+V {
        switch-focus-between-floating-and-tiling
    }
    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W {
        toggle-column-tabbed-display
    }
    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }
    Print {
        //screenshot
        spawn "sh" "-c" "grim -g \"$(slurp -d)\" - | satty --filename -"
    }
    Ctrl+Print {
        screenshot-screen
    }
    Alt+Print {
        screenshot-window
    }
    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false {
        toggle-keyboard-shortcuts-inhibit
    }
    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E {
        spawn "~/.config/rofi/module/powermenu/type-5/powermenu.sh"
        // quit
    }
    Ctrl+Alt+Delete {
        quit
    }
    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P {
        power-off-monitors
    }
}
